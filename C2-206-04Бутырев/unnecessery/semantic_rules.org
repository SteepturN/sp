#+TITLE: Semantic Rules
          Правила семантики языка МИКРОЛИСП.

1. [X] Любая процедура, вызванная в программе, должна быть в этой программе определена.
   1. [X] проверка в конце
2. [X] Область видимости имени процедуры – вся программа
 (глобальная область видимости). В тексте программы вызов процедуры может как предшествовать определению процедуры, так и следовать за ним. Первый вызов еще не определенной процедуры считается ее объявлением. Это правило разрешает определять взаимно рекурсивные процедуры.
   1. [X] В тексте программы вызов процедуры может как предшествовать определению процедуры, так и следовать за ним.
   2. [X] Первый вызов еще не определенной процедуры считается ее объявлением.
3. [X] В глобальной области видимости неявно редопределены элементарные математические процедуры: abs, atan, cos, exp, expt, log, quotient, remainder, sin, sqrt и tan, а также математические константы е и pi.
4. [X] Сигнатуры вызова и определения процедуры должны
 совпадать. Сигнатура определяется количеством
(арностью) и упорядоченным набором типов параметров. Тип параметра может быть числовым(real) или булевским(bool).
5. [X] В программе могут быть определены глобальные переменные.
 Область видимости глобальной переменной  -  вся программа.
 В тексте программы ссылка на переменную может как
 предшествовать определению, так и следовать за ним.
 Первая ссылка на еще не определенную переменную считается ее объявлением. Ссылка в операторе присваивания тоже учитывается.
6. [X] Все имена в глобальной области видимости должны быть уникальными, т.е. в глобальной области видимости имена нельзя переопределять.
7. [X] Каждая процедура формирует отдельную локальную область видимости, вложенную в глобальную. Локальная область простирается до конца тела процедуры и содержит имена параметров.
  В пределах своей области видимости имя параметра маскирует глобальное имя и считается именем переменной.
  Определение (define (f f) f)  корректно. В теле процедуры,  f - имя локальной переменной.
 Определение (define (f f) (f 1))  некорректно.  Процедуру f рекурсивно вызвать нельзя.
8. [X] Имена параметров одной процедуры должны быть уникальными.
9. [X] Локальную переменную в теле процедуры можно явно определить с помощью формы define. Эти переменные находятся в той же  локальной области видимости, что и параметры.
10. [X] Локальные переменные нельзя переопределять.
11. [X] Все определения локальных переменных должны располагаться в  начале тела процедуры.
    автоматически
12. [X] Выражения-идентификаторы могут быть только именами констант, параметров или переменных, но не процедур.  Из этого следует, что имена процедур нельзя передавать в качестве аргументов.
    автоматически
13. [X] Идентификатор в операторе присваивания должен быть именем  переменной или параметра, но не именем процедуры или константы.
14. [X] Идентификатор вызова процедуры должен быть именем процедуры.
 Он не может быть именем параметра  или переменной.

  Правила семантики следует интерпретировать во взаимодействии с правилами грамматики.
 Ниже приведен обзор правил грамматики, создающих контекст для применения правил семантики.
1. [X] Все определения записываются перел вычислениями.
  Это означает, что к началу вычислений имя либо
   определено, либо оно никогда не будет определено
   в тексте программы.
2. [X] Грамматика не порождает локалльные процедуры,
  т.е. в теле процедуры нельзя записать определение
  другой процедуры.
  Это ограничение существенно упрощает структуру
  областей видимости имен, делая ее двухуровневой.
3. [X] Грамматика позволяет определять локальные переменные, но в теле процедуры определения могут появиться   вперемешку с вычислениями. Такая чересполосица может  привести к серьезным ошибкам при выполнении  программы, если доступ к переменной предшествует ее определению. Лисп запрещает доступ к неинициализированной   переменоой. Поскольку Микролисп - подмножество Лиспа, он   тоже устанавливает подобный запрет, но только с помощью
  П.11 правил семантики.
  Кроме того, грамматика разрешает исползовать в качестве инициализатора переменной только константу. Это  исключает доступ к переменным в инициализаторах.
4. [X] Грамматика однозначно оределяет сигнатуры процедур.
  Микролисп - язык со строгой типизацией.
  Имена, принадлежащие токену $id обозначают объекты
  числового типа, а имена из токена $idq - булевского.
  Поэтому сигнатура процедуры определяется грамматической  формой записи ее заголовка со списком параметров.

  Грамматика четко разделяет выражения на синтаксические классы числовых(Е) и булевких(BOOL), причем эти классы не пересекаются. Поэтому сигнатура вызова процедуры определяется грамматической формой записи списка аргументов.

   Грамматика различает числовые и булевские процедуры.
   У числовых процедур могут быть только числовые
  параметры, а у процедур-предикатов - как числовые,
  так и булевские.
5. [X] Грамматика не позволяет определять булевские
  переменные.
  В форме define имя переменной задано токеном $id.
  Однако, в теле процедуры токен $idq можно использовать для доступа к значению булевского параметра.
